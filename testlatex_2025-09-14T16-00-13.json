{
  "name": "test_Latex",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "options": {
          "responseMode": "lastNode"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        0,
        0
      ],
      "id": "791a0d77-072b-41d8-aa24-28959e04bffd",
      "name": "Latex generator",
      "webhookId": "21cfffbb-eae0-4a86-9506-fdfd6dfedf45"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5602c1ef-1652-4fc2-9ecc-02b69021fd5d",
              "name": "user_text",
              "value": "={{ $json.chatInput }}",
              "type": "string"
            },
            {
              "id": "0f26d8e0-b0d8-4b89-adec-5c827db8b022",
              "name": "timestamp",
              "value": "={{ $now }}",
              "type": "string"
            },
            {
              "id": "c9d1026d-2edf-41f3-958b-0b0650f1579b",
              "name": "filename",
              "value": "={{ $workflow.name }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        208,
        0
      ],
      "id": "56d4a490-a068-41da-b819-c984940fbd36",
      "name": "Set"
    },
    {
      "parameters": {
        "jsCode": "// Escape LaTeX special characters\nfunction escapeLatex(text) {\n  return text\n    .replace(/\\\\/g, '\\\\textbackslash{}')\n    .replace(/\\{/g, '\\\\{')\n    .replace(/\\}/g, '\\\\}')\n    .replace(/\\$/g, '\\\\$')\n    .replace(/&/g, '\\\\&')\n    .replace(/%/g, '\\\\%')\n    .replace(/#/g, '\\\\#')\n    .replace(/\\^/g, '\\\\textasciicircum{}')\n    .replace(/_/g, '\\\\_')\n    .replace(/~/g, '\\\\textasciitilde{}');\n}\n\n// Process text formatting\nfunction processFormatting(text) {\n  // Convert **bold** to LaTeX\n  text = text.replace(/\\*\\*(.*?)\\*\\*/g, '\\\\textbf{$1}');\n  // Convert *italic* to LaTeX  \n  text = text.replace(/\\*(.*?)\\*/g, '\\\\textit{$1}');\n  // Convert line breaks\n  text = text.replace(/\\n\\n/g, '\\n\\n\\\\par\\n');\n  return text;\n}\n\nconst userText = $input.all()[0].json.user_text;\nconst filename = $input.all()[0].json.filename;\n\n// Escape and format text\nconst escapedText = escapeLatex(userText);\nconst formattedText = processFormatting(escapedText);\n\n// Generate LaTeX document\nconst latexContent = `\\\\documentclass[12pt]{article}\n\\\\usepackage[utf8]{inputenc}\n\\\\usepackage[margin=1in]{geometry}\n\\\\usepackage{parskip}\n\n\\\\title{Generated Document}\n\\\\author{n8n LaTeX Agent}\n\\\\date{\\\\today}\n\n\\\\begin{document}\n\\\\maketitle\n\n${formattedText}\n\n\\\\end{document}`;\n\nreturn [{\n  json: {\n    latex_content: latexContent,\n    filename: filename\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        416,
        0
      ],
      "id": "3a0501bf-1246-405d-bedc-123d219c5cf8",
      "name": "Generate Latex"
    },
    {
      "parameters": {
        "command": "sh -c \"echo '{{ $json.latex_content }}' > /tmp/{{ $json.filename }}.tex\""
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        624,
        0
      ],
      "id": "1b6564ab-355e-46b6-8a74-a44ae6c559e5",
      "name": "Write Latex"
    },
    {
      "parameters": {
        "command": "=cd /tmp && pdflatex -interaction=nonstopmode -halt-on-error test_Latex.tex"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        832,
        0
      ],
      "id": "bb5c8b76-bdea-4e4e-89dd-c9982b546034",
      "name": "Compile PDF"
    }
  ],
  "connections": {
    "Latex generator": {
      "main": [
        [
          {
            "node": "Set",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set": {
      "main": [
        [
          {
            "node": "Generate Latex",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Latex": {
      "main": [
        [
          {
            "node": "Write Latex",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Write Latex": {
      "main": [
        [
          {
            "node": "Compile PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-13T15:01:02.162Z",
  "updatedAt": "2025-09-13T15:30:24.384Z",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "pinData": {},
  "versionId": "cb3e04a3-52fd-4773-9c69-f5a73eab57e9",
  "triggerCount": 0,
  "id": "fQq3S0fivC2q5Mv0",
  "meta": null,
  "parentFolderId": null,
  "isArchived": false
}
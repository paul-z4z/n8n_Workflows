{
  "name": "test1__can delete_CN_Data injection",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 5,
              "unit": "minutes"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "16gPIm3EcPcbeH14joSagcP1JdwWcYksE",
          "mode": "list",
          "cachedResultName": "CodeNinjas",
          "cachedResultUrl": "https://drive.google.com/drive/folders/16gPIm3EcPcbeH14joSagcP1JdwWcYksE"
        },
        "event": "fileCreated",
        "options": {}
      },
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "2a8de228-86b1-45c4-b5f3-226376b5cb19",
      "name": "Google Drive Trigger",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "SQXbjDm2Ja0QicjT",
          "name": "Google Drive 9397417 CN"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1d3118e8-24ba-4b57-aa16-9af1facf3e7a",
              "leftValue": "={{ $json.name }}",
              "rightValue": "done",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        208,
        0
      ],
      "id": "f1463fd6-9a62-446b-934f-f3d74945dbf3",
      "name": "If"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        416,
        -96
      ],
      "id": "e23192db-1519-40e8-b72e-d73f1189a71f",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "options": {
          "binaryPropertyName": "data",
          "googleFileConversion": {
            "conversion": {}
          }
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        416,
        96
      ],
      "id": "bebff011-1753-46ac-93d2-aef75167503b",
      "name": "Download",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "SQXbjDm2Ja0QicjT",
          "name": "Google Drive 9397417 CN"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.fileExtension }}",
                    "rightValue": "txt",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "37926ca5-3979-46a1-9628-e130538d1206"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "txt"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1a733ead-470c-4c83-81ad-0d134db860ee",
                    "leftValue": "={{ $json.fileExtension }}",
                    "rightValue": "doc",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "DOC"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "45431a09-bdf0-4e50-b1ed-d00f71be399f",
                    "leftValue": "={{ $json.fileExtension }}",
                    "rightValue": "DOCX",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "DOCX"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "04ded589-898a-48bb-aa18-e28627c05bc3",
                    "leftValue": "={{ $json.fileExtension }}",
                    "rightValue": "pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PDF"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        624,
        96
      ],
      "id": "21ddbef0-0e6f-4bd6-91c2-570712999699",
      "name": "Detect type"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const binaryData = $input.item.binary.data;\nconst buffer = Buffer.from(binaryData.data, 'base64');\nconst text = buffer.toString('utf-8');\n\nreturn {\n  json: {\n    fileName: $input.item.json.name,\n    fileId: $input.item.json.id,\n    extractedText: text,\n    mimeType: $input.item.json.mimeType\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        832,
        -16
      ],
      "id": "44bfa778-bda4-40a0-be58-e0ef3f1bf8bd",
      "name": "Extract txt"
    },
    {
      "parameters": {
        "jsCode": "// Using pdf-parse library (need to enable external npm modules)\nconst PDFParser = require('pdf-parse');\n\nconst binaryData = $input.item.binary.data;\nconst buffer = Buffer.from(binaryData.data, 'base64');\n\nconst pdfData = await PDFParser(buffer);\n\nreturn {\n  json: {\n    fileName: $input.item.json.name,\n    fileId: $input.item.json.id,\n    extractedText: pdfData.text,\n    pageCount: pdfData.numpages\n  },\n  binary: $input.item.binary // Keep binary for later\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        832,
        304
      ],
      "id": "7d6a3d25-c4ce-4eb2-b898-4da96c870850",
      "name": "extract PDF"
    },
    {
      "parameters": {
        "jsCode": "const mammoth = require('mammoth');\n\nconst binaryData = $input.item.binary.data;\nconst buffer = Buffer.from(binaryData.data, 'base64');\n\nconst result = await mammoth.extractRawText({ buffer: buffer });\n\nreturn {\n  json: {\n    fileName: $input.item.json.name,\n    fileId: $input.item.json.id,\n    extractedText: result.value\n  },\n  binary: $input.item.binary\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        832,
        144
      ],
      "id": "9068e45f-7c4a-4434-b4ba-223176c44208",
      "name": "extract doc"
    }
  ],
  "connections": {
    "Google Drive Trigger": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download": {
      "main": [
        [
          {
            "node": "Detect type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Detect type": {
      "main": [
        [
          {
            "node": "Extract txt",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "extract doc",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "extract doc",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "extract PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-29T17:51:35.950Z",
  "updatedAt": "2025-10-01T02:02:44.422Z",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "pinData": {},
  "versionId": "e8d8d9f7-e669-433a-b687-0b52b2a96926",
  "triggerCount": 0,
  "id": "66JbeYMtlipZD5Xh",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "parentFolderId": null,
  "isArchived": true
}
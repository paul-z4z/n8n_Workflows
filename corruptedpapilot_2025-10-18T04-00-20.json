{
  "name": "corrupted PA Pilot",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-3.5-turbo",
          "mode": "list",
          "cachedResultName": "gpt-3.5-turbo"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -144,
        208
      ],
      "id": "5620ff9b-316f-478c-b8a0-08c1864d1332",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "T6jALHM6FIHsU7i3",
          "name": "OpenAi API"
        }
      }
    },
    {
      "parameters": {
        "endpointUrl": "http://n8n:5678/webhook/51105a53-0f04-4efa-a9f7-8464b71cbb02",
        "serverTransport": "httpStreamable"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1.1,
      "position": [
        208,
        208
      ],
      "id": "aed67e04-b630-4345-9eed-fbc7383a9207",
      "name": "MCP Client"
    },
    {
      "parameters": {
        "path": "51105a53-0f04-4efa-a9f7-8464b71cbb02"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "typeVersion": 2,
      "position": [
        368,
        160
      ],
      "id": "04132130-053c-4628-93ba-05d455660f90",
      "name": "MCP Server Trigger",
      "webhookId": "51105a53-0f04-4efa-a9f7-8464b71cbb02"
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "lpd2000@gmail.com",
          "mode": "list",
          "cachedResultName": "lpd2000@gmail.com"
        },
        "returnAll": "=returnAll: true",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        480,
        320
      ],
      "id": "2ae7c8d0-c025-43af-8947-f42df5af22c8",
      "name": "Get many events in Google Calendar",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "UpYMdK76SRAFiDWv",
          "name": "GCalendar account LPD2000"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const response = $input.first().json.output;\n\n// For voice: clean text without formatting\nconst voiceText = response\n  .replace(/\\n/g, ' ')                    // Replace line breaks with spaces\n  .replace(/\\*\\*(.*?)\\*\\*/g, '$1')       // Remove bold markdown\n  .replace(/\\s+/g, ' ')                  // Clean up multiple spaces\n  .trim();\n\n// For email: HTML formatted\nconst emailHtml = response\n  .replace(/\\n/g, '<br>')                // Line breaks to HTML\n  .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>') // Bold formatting\n  .replace(/- (.*?):/g, '<li><strong>$1:</strong></li>') // List items\n  .replace(/(\\d+\\.\\s)/g, '<br><strong>$1</strong>'); // Number formatting\n\n// For email: Plain text with proper formatting  \nconst emailPlain = response\n  .replace(/\\*\\*(.*?)\\*\\*/g, '$1');      // Remove markdown but keep line breaks\n\nreturn { \n  json: { \n    voice_text: voiceText,        // Clean text for TTS\n    email_html: emailHtml,        // HTML for email\n    email_plain: emailPlain,      // Plain text for email\n    original: response            // Keep original\n  } \n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        768,
        0
      ],
      "id": "bd715ba2-3b04-4d2c-9efe-2dad64e96ff6",
      "name": "Code"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        0,
        208
      ],
      "id": "d054d243-82b3-47a5-b1e9-d59be4925c1f",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "2xkaCrgCVOfCETb3",
          "name": "PostgreSQL credential n8n_database"
        }
      }
    },
    {
      "parameters": {
        "content": "## this workflow is fully functional. \nit is designed to send to voice generator AND email. the end nodes are missing\n ",
        "height": 240,
        "width": 480
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        704,
        -96
      ],
      "typeVersion": 1,
      "id": "d8f64c8a-b512-4716-931b-cb23b510b73f",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        -224,
        -64
      ],
      "id": "d06e2b03-01c0-4a94-821a-8096e6ef216c",
      "name": "When chat message received",
      "webhookId": "61eed59d-057e-4507-ae73-4ac17fb74a20"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        16,
        -48
      ],
      "id": "3d242eb5-1f03-43af-ae5e-504a068c9a74",
      "name": "AI Agent"
    }
  ],
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "MCP Client": {
      "ai_tool": [
        []
      ]
    },
    "Get many events in Google Calendar": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        []
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-03T00:58:09.634Z",
  "updatedAt": "2025-09-07T18:17:34.235Z",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "pinData": {},
  "versionId": "e3d22259-94f5-447e-a4eb-5f4e9577ea70",
  "triggerCount": 2,
  "id": "OFS3xqZAEyHfjrzc",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "parentFolderId": null,
  "isArchived": true
}